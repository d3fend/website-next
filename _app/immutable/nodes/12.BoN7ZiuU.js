import{m as i}from"../chunks/matrix.Da5s4cAc.js";import{s as _,c as f,u as c,g as m,a as d,o as p,E as g,O as S}from"../chunks/scheduler.xR-uXgLO.js";import{S as b,i as y,t as h,a as M}from"../chunks/index.BpaDVXPB.js";import{t as u,a as O}from"../chunks/updateDefendTree.YJzIXIzN.js";const j="always",v=!0;async function L(o){return i(o)}const R=Object.freeze(Object.defineProperty({__proto__:null,load:L,prerender:v,trailingSlash:j},Symbol.toStringTag,{value:"Module"}));function q(o){let a;const s=o[2].default,e=f(s,o,o[1],null);return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,r){e&&e.m(t,r),a=!0},p(t,[r]){e&&e.p&&(!a||r&2)&&c(e,s,t,t[1],a?d(s,t[1],r,null):m(t[1]),null)},i(t){a||(h(e,t),a=!0)},o(t){M(e,t),a=!1},d(t){e&&e.d(t)}}}function w(o,a,s){let e;p(o,u,n=>s(3,e=n));let{$$slots:t={},$$scope:r}=a,{data:l}=a;return g(()=>{S(u,e={tree:l.remote_d3fend_tree||[],treeMap:O(l.remote_d3fend_tree)},e)}),o.$$set=n=>{"data"in n&&s(0,l=n.data),"$$scope"in n&&s(1,r=n.$$scope)},[l,r,t]}class T extends b{constructor(a){super(),y(this,a,w,q,_,{data:0})}}export{T as component,R as universal};
